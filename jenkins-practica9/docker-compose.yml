version: "3"

services:
#--------Api Server -----
  api-server:
    container_name: "api-server"
    restart: always
    build: ./api-server/.
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - CHOKIDAR_USEPOLLING="true"
    working_dir: /app
    ports:
      - 5001:5001
    networks:
      - app_network
#--------Redis -----
  redis:
    container_name: "redis-service"
    image: redis:alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    networks:
      - app_network
#--------DB -----
  db:
    container_name: "database"
    build: ./db/
    restart: always
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    command: --init-file /init_scripts/init_db.sql
    volumes:
      - db_data:/var/lib/mysql
      - init_scripts:/init_scripts
    networks:
      - app_network
#--------CLIENT -----
  client:
    build:
      context: ./client
    command: npm start
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      WATCHPACK_POLLING: true
    networks:
      - app_network
#---------- Jenkins --------  
  jenkins:
    build:
      context: .
      dockerfile: ./jenkins/Dockerfile
    privileged: true
    user: root
    restart: always
    ports:
      - "9090:8080"
      - "50000:50000"
    dns:
      #- 8.8.8.8
      #- 4.4.4.4
      - 148.201.3.10
      - 148.201.3.12
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_home:/var/jenkins_home
#---------- Agent --------
  agent:
    build: 
      context: .
      dockerfile: ./agent/Dockerfile
    ports:
      - "2200:22"
    dns:
      #- 8.8.8.8
      #- 4.4.4.4
      - 148.201.3.10
      - 148.201.3.12
    volumes:
      - jenkins-ssh-agent:/home/jenkins/agent
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=${JENKINS_AGENT_SSH_PUBKEY}
#---------- SonarQube --------
  sonarqube:
    image: sonarqube
    ports:
      - 9000:9000
#-------------
volumes:
  db_data:
  redis_data:
  init_scripts:
  jenkins_home:
  jenkins-ssh-agent:
networks:
  app_network:
    driver: bridge
